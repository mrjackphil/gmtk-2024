[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://c1sbofapoimcq"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_tnuhu"]
expanded_output_ports = [0]
constant = Color(1, 1, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_6q4sg"]
noise_type = 0
seed = 3
frequency = 0.0093
fractal_weighted_strength = 1.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_r0a32"]
seamless = true
noise = SubResource("FastNoiseLite_6q4sg")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_e5ax4"]
output_port_for_preview = 1
expanded_output_ports = [0]
texture = SubResource("NoiseTexture2D_r0a32")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ru7s8"]
default_input_values = [1, Vector2(1, 1), 2, Vector2(1, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_72a44"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_pdid7"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.2, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_t35fb"]
default_input_values = [0, Vector3(1, 1, 1), 1, 0.2, 2, 0.5]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_j8ekp"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 0)]
op_type = 0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, fog_disabled;

uniform sampler2D tex_frg_3;




// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}


void fragment() {
// ColorConstant:2
	vec4 n_out2p0 = vec4(1.000000, 1.000000, 0.000000, 1.000000);


// Input:5
	float n_out5p0 = TIME;


// RandomRange:7
	vec3 n_in7p0 = vec3(1.00000, 1.00000, 1.00000);
	float n_in7p1 = 0.20000;
	float n_in7p2 = 0.50000;
	float n_out7p0 = mix(n_in7p1, n_in7p2, hash_noise_range(n_in7p0).x);


// VectorOp:8
	vec2 n_in8p1 = vec2(1.00000, 0.00000);
	vec2 n_out8p0 = vec2(n_out7p0) + n_in8p1;


// VectorOp:6
	vec2 n_out6p0 = vec2(n_out5p0) * n_out8p0;


// UVFunc:4
	vec2 n_in4p1 = vec2(1.00000, 1.00000);
	vec2 n_out4p0 = n_out6p0 * n_in4p1 + UV;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, n_out4p0);
	float n_out3p1 = n_out3p0.r;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out3p1;


}
"
graph_offset = Vector2(-269.081, -39.4453)
flags/unshaded = true
flags/fog_disabled = true
nodes/fragment/0/position = Vector2(1040, 440)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorConstant_tnuhu")
nodes/fragment/2/position = Vector2(-140, 40)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_e5ax4")
nodes/fragment/3/position = Vector2(0, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_ru7s8")
nodes/fragment/4/position = Vector2(-300, 440)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_72a44")
nodes/fragment/5/position = Vector2(-820, 420)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_pdid7")
nodes/fragment/6/position = Vector2(-500, 460)
nodes/fragment/7/node = SubResource("VisualShaderNodeRandomRange_t35fb")
nodes/fragment/7/position = Vector2(-940, 620)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_j8ekp")
nodes/fragment/8/position = Vector2(-700, 640)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 4, 0, 3, 0, 6, 0, 4, 2, 7, 0, 8, 0, 8, 0, 6, 1, 3, 1, 0, 1, 5, 0, 6, 0)
